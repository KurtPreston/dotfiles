# Gulp tab completion for fish
# This provides tab completion for gulp tasks by running `gulp -T` in the background

# Cache directory for gulp task lists
set -g GULP_CACHE_DIR (test -n "$XDG_CACHE_HOME"; and echo "$XDG_CACHE_HOME/dotfiles-gulp"; or echo "$HOME/.cache/dotfiles-gulp")

# Function to get cached gulp tasks or trigger background refresh
function __get_gulp_tasks
    set -l cache_file "$GULP_CACHE_DIR"/(pwd | sed 's|/|_|g')
    set -l gulpfile ""
    
    # Check if we're in a directory with a gulpfile
    if test -f "gulpfile.js"
        set gulpfile "gulpfile.js"
    else if test -f "gulpfile.mjs"
        set gulpfile "gulpfile.mjs"
    else if test -f "gulpfile.ts"
        set gulpfile "gulpfile.ts"
    else if test -f "gulpfile.babel.js"
        set gulpfile "gulpfile.babel.js"
    else if test -f "Gulpfile.js"
        set gulpfile "Gulpfile.js"
    else
        # No gulpfile found, return empty
        return 1
    end
    
    # Create cache directory if it doesn't exist
    mkdir -p "$GULP_CACHE_DIR"
    
    # Check if cache exists and is newer than gulpfile
    if test -f "$cache_file" -a "$cache_file" -nt "$gulpfile"
        # Use cached tasks
        cat "$cache_file" 2>/dev/null
    else
        # Start background task to refresh cache
        __refresh_gulp_cache_async "$cache_file" &
        
        # Return cached tasks if available, otherwise empty
        if test -f "$cache_file"
            cat "$cache_file" 2>/dev/null
        end
    end
end

# Function to refresh gulp cache in background
function __refresh_gulp_cache_async
    set -l cache_file $argv[1]
    set -l temp_file "$cache_file.tmp"
    
    # Run gulp -T and extract task names
    # gulp -T output format: "├── task-name  Description" or "├─┬ task-name"
    # We want to extract just the task names from both simple and composite tasks
    if command -v gulp >/dev/null 2>&1
        begin
            gulp -T 2>/dev/null | \
            grep -E "^[├└]─" | \
            sed -E 's/^[├└]─[─┬] ([^ ]+).*/\1/' | \
            grep -v "^\$" > "$temp_file"
            and mv "$temp_file" "$cache_file"
        end 2>/dev/null
    end
end

# Main completion function for gulp
function __gulp_complete
    set -l cmd (commandline -opc)
    set -l current (commandline -ct)
    
    # Only provide task completion for the first argument after 'gulp'
    # or when the previous argument is a gulp option that expects a task
    if test (count $cmd) -eq 1
        or string match -q -- "--task" $cmd[-1]
        or string match -q -- "--series" $cmd[-1]
        or string match -q -- "--parallel" $cmd[-1]
        
        set -l tasks (__get_gulp_tasks)
        
        if test -n "$tasks"
            for task in $tasks
                echo $task
            end
        end
    end
end

# Function to clean old cache files (optional maintenance)
function __clean_gulp_cache
    if test -d "$GULP_CACHE_DIR"
        # Remove cache files older than 7 days
        find "$GULP_CACHE_DIR" -type f -mtime +7 -delete 2>/dev/null
    end
end

# Register completion for gulp command
complete -c gulp -f -a "(__gulp_complete)" -d "Gulp task"

# Clean old cache files when this script is sourced (runs once per shell session)
__clean_gulp_cache
